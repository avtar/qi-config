- job:
    name: {{ app_name }}-tests
    description: "{{ app_name }} tests"
    project-type: multijob
    node: {{ qi_linux_build_node }}
    scm:
      # Every git branch will be monitored for activity and built. Branches without .qi.yml
      # configuration files will not have their jobs executed.
      - git:
          url: {{ git_repository }}      
    triggers:
      - github
    builders:
      # Each parent multijob builder passes the Jenkins WORKSPACE environment
      # variable to its child job as a parameter so that a common Git working
      # directory can be used.
      - multijob:
          name: download-{{ app_name }}-vagrantfile
          condition: SUCCESSFUL
          projects:
            - name: download-{{ app_name }}-vagrantfile
              predefined-parameters: parent_workspace=$WORKSPACE
      - multijob:
          name: create-{{ app_name }}-vm
          condition: SUCCESSFUL
          projects:
            - name: create-{{ app_name }}-vm
              predefined-parameters: parent_workspace=$WORKSPACE
      - multijob:
          name: {{ app_name }}-commands
          condition: COMPLETED
          projects:
            - name: {{ app_name }}-commands
              predefined-parameters: parent_workspace=$WORKSPACE
      - multijob:
          name: delete-{{ app_name }}-vm
          condition: SUCCESSFUL
          projects:
            - name: delete-{{ app_name }}-vm
              predefined-parameters: parent_workspace=$WORKSPACE

# Conditional build steps for all the following jobs make Jenkins skip workloads when Git branches
# don't contain .qi.yml configuration files.
- job:
    name: download-{{ app_name }}-vagrantfile
    description: "Download Vagrantfile"
    node: {{ qi_linux_build_node }}
    workspace: $parent_workspace
    builders:
      - conditional-step:
          condition-kind: file-exists
          condition-filename: .qi.yml
          on-evaluation-failure: dont-run
          steps:
            - shell: wget -O Vagrantfile {{ qi_vagrantfile_url }}

- job:
    name: create-{{ app_name }}-vm
    description: "Create a test VM"
    node: {{ qi_linux_build_node }}
    workspace: $parent_workspace
    builders:
      # Setting BUILD_ID for the vagrant process to make sure the Jenkins process tree killer
      # doesn't kill the VM before the next job is started.
      - conditional-step:
          condition-kind: file-exists
          condition-filename: .qi.yml
          on-evaluation-failure: dont-run
          steps:
            - shell: BUILD_ID={{ app_name }} DISPLAY=:0 vagrant up --provider virtualbox

- job:
    name: {{ app_name }}-commands
    description: "{{ app_name }} commands"
    node: {{ qi_linux_build_node }}
    workspace: $parent_workspace
    builders:
      - conditional-step:
          condition-kind: file-exists
          condition-filename: .qi.yml
          on-evaluation-failure: dont-run
          steps:
     {% for command in commands %}
       - shell: vagrant ssh -c 'cd {{ qi_linux_vm_job_commands_directory }} && {{ command }}'
     {% endfor %}
    
    publishers:
      - email:
          recipients: {{ email }}
      - html-publisher:
          name: "HTML Reports"
          dir: "reports/"
          files: "index.html"
          allow-missing: true
      - cobertura:
          report-file: report.cov
          only-stable: false
          fail-no-reports: false
          targets:
            - files:
                healthy: 0
                unhealthy: 0
                failing: 0
      - tap:
          results: report.tap
          fail-if-no-results: false

- job:
    name: delete-{{ app_name }}-vm
    description: 'Delete the test VM'
    node: {{ qi_linux_build_node }}
    workspace: $parent_workspace
    builders:
      - conditional-step:
          condition-kind: file-exists
          condition-filename: .qi.yml
          on-evaluation-failure: dont-run
          steps:
            - shell: vagrant destroy -f